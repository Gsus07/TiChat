---
// src/components/GameCard.astro
import type { Game } from '../utils/games';
import { isGameFavorite } from '../utils/favorites';
import { supabase } from '../utils/supabaseClient';

export interface Props {
  game: Game;
  userId?: string;
}

const { game, userId } = Astro.props;

// Verificar que el juego existe
if (!game || !game.id) {
  throw new Error('GameCard: game prop is required and must have an id');
}

// Verificar si el juego está en favoritos del usuario
let isFavorite = false;
if (userId) {
  const { data } = await isGameFavorite(userId, game.id);
  isFavorite = data || false;
}

// Obtener conteo de servidores activos para este juego
const { count: serverCount } = await supabase
  .from('game_servers')
  .select('id', { count: 'exact', head: true })
  .eq('game_id', game.id)
  .eq('is_active', true);

// Obtener conteo de posts para este juego
const { count: postCount } = await supabase
  .from('posts')
  .select('id', { count: 'exact', head: true })
  .eq('game_id', game.id)
  .eq('is_active', true);
---
<div class="block group relative" data-game-id={game.id}>
  <!-- Glow effect background -->
  <div class="absolute -inset-1 bg-gradient-to-r from-purple-600 to-blue-600 rounded-2xl blur opacity-0 group-hover:opacity-75 transition duration-500"></div>
  
  <!-- Main card -->
  <div class="relative bg-gradient-to-br from-slate-800/90 to-slate-900/90 backdrop-blur-xl rounded-2xl overflow-hidden shadow-2xl transition-all duration-500 hover:scale-[1.02] hover:shadow-purple-500/25 border border-white/10 group-hover:border-purple-500/50">
    <!-- Image container with overlay effects -->
    <div class="relative h-56 overflow-hidden">
      <img 
        src={game.cover_image_url || '/images/default-game.jpg'} 
        alt={game.name}
        class="w-full h-full object-cover transition-all duration-700 group-hover:scale-110 group-hover:brightness-110"
      />
      <!-- Gradient overlay -->
      <div class="absolute inset-0 bg-gradient-to-t from-slate-900/80 via-transparent to-transparent opacity-60 group-hover:opacity-40 transition-opacity duration-500"></div>
      
      <!-- Favorite button -->
      {userId && (
        <button 
          class="favorite-btn absolute top-4 right-4 w-12 h-12 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center transition-all duration-500 hover:bg-white/30"
          data-game-id={game.id}
          data-is-favorite={isFavorite}
        >
          <svg class={`w-6 h-6 transition-colors duration-300 ${isFavorite ? 'text-red-500 fill-current' : 'text-white'}`} fill={isFavorite ? 'currentColor' : 'none'} stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
          </svg>
        </button>
      )}
      
      <!-- Game stats overlay -->
      <div class="absolute top-4 left-4 space-y-2">
        {serverCount && serverCount > 0 && (
          <div class="bg-green-500/80 backdrop-blur-sm px-3 py-1 rounded-full text-white text-sm font-medium">
            {serverCount} servidor{serverCount !== 1 ? 'es' : ''}
          </div>
        )}
        {postCount && postCount > 0 && (
          <div class="bg-blue-500/80 backdrop-blur-sm px-3 py-1 rounded-full text-white text-sm font-medium">
            {postCount} post{postCount !== 1 ? 's' : ''}
          </div>
        )}
      </div>
      
      <!-- Shimmer effect -->
      <div class="absolute inset-0 -translate-x-full group-hover:translate-x-full transition-transform duration-1000 bg-gradient-to-r from-transparent via-white/20 to-transparent skew-x-12"></div>
    </div>
    
    <!-- Content section -->
    <div class="p-6 relative">
      <!-- Title with gradient -->
      <h2 class="text-2xl font-bold mb-3 text-transparent bg-clip-text bg-gradient-to-r from-white to-gray-300 group-hover:from-purple-300 group-hover:to-blue-300 transition-all duration-500">
        {game.name}
      </h2>
      
      <!-- Description -->
      <p class="text-gray-400 group-hover:text-gray-300 transition-colors duration-300 leading-relaxed">
        {game.description || 'Explora este increíble juego y únete a la comunidad.'}
      </p>
      
      <!-- Game info -->
      <div class="flex items-center gap-4 mt-3 text-sm text-gray-500">
        {game.genre && (
          <span class="bg-gray-700/50 px-2 py-1 rounded-md">{game.genre}</span>
        )}
        {game.platform && (
          <span>{game.platform}</span>
        )}
        {game.release_date && (
          <span>{new Date(game.release_date).getFullYear()}</span>
        )}
      </div>
      
      <!-- Action buttons -->
      <div class="flex items-center justify-between mt-4">
        <a href={`/${game.name.toLowerCase()}`} class="flex items-center text-purple-400 group-hover:text-purple-300 transition-colors duration-300">
          <span class="text-sm font-medium">Explorar</span>
          <svg class="w-4 h-4 ml-2 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </div>

<script>
  // Manejar favoritos
  document.addEventListener('DOMContentLoaded', () => {
    const favoriteButtons = document.querySelectorAll('.favorite-btn');
    
    favoriteButtons.forEach(button => {
      button.addEventListener('click', async (e) => {
        e.preventDefault();
        e.stopPropagation();
        
        const gameId = (button as HTMLElement).dataset.gameId;
        const isFavorite = (button as HTMLElement).dataset.isFavorite === 'true';
        
        try {
          const token = localStorage.getItem('supabase.auth.token');
          if (!token) {
            alert('Debes iniciar sesión para agregar favoritos');
            return;
          }
          
          const response = await fetch(`/api/games/${gameId}/favorite`, {
            method: 'POST',
            headers: {
              'Authorization': `Bearer ${token}`,
              'Content-Type': 'application/json'
            }
          });
          
          if (response.ok) {
            const result = await response.json();
            const svg = button.querySelector('svg');
            
            if (svg && result.is_favorite) {
              svg.classList.add('text-red-500', 'fill-current');
              svg.classList.remove('text-white');
              svg.setAttribute('fill', 'currentColor');
              (button as HTMLElement).dataset.isFavorite = 'true';
            } else if (svg) {
              svg.classList.remove('text-red-500', 'fill-current');
              svg.classList.add('text-white');
              svg.setAttribute('fill', 'none');
              (button as HTMLElement).dataset.isFavorite = 'false';
            }
          }
        } catch (error) {
          console.error('Error toggling favorite:', error);
        }
      });
    });
  });
</script>
        
        <div class="flex items-center gap-2 text-gray-500 text-sm">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
          </svg>
          <span>{(serverCount || 0) + (postCount || 0)} actividad</span>
        </div>
      </div>
      
      <!-- Decorative elements -->
      <div class="absolute bottom-0 left-0 w-full h-1 bg-gradient-to-r from-purple-500 to-blue-500 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-500 origin-left"></div>
    </div>
  </div>
</a>