---
import Layout from '../layouts/Layout.astro';
import PostCard from './PostCard.astro';
import PostForm from './react/PostForm.tsx';
import ThemeProvider from './ThemeProvider.astro';
import { getPostsByServerId } from '../utils/posts';
import { getCurrentUser } from '../utils/auth';
import type { GameServer, Game, ThemeConfig } from '../utils/games';
import type { Post } from '../utils/posts';

interface Props {
  server: GameServer;
  game: Game;
  themeConfig: ThemeConfig;
}

const { server, game, themeConfig } = Astro.props;

// Obtener usuario actual
const currentUser = await getCurrentUser(Astro.request);

// Obtener posts del servidor
const { data: posts, error: postsError } = await getPostsByServerId(server.id);

if (postsError) {
  // Silent error handling
}

const serverPosts = posts || [];

// Configurar imágenes desde el tema (servidor + juego)
const heroImage = server.server_cover_image || themeConfig.images?.hero || game.cover_image_url || 'https://images.unsplash.com/photo-1542751371-adc38448a05e?w=1200&h=600&fit=crop';
const serverIcon = themeConfig.images?.icon || `/icons/${server.server_type}.svg`;

// Función para obtener el color del tipo de servidor
function getServerTypeColor(type: string) {
  const colors = {
    survival: 'text-green-400',
    creative: 'text-blue-400',
    pvp: 'text-red-400',
    roleplay: 'text-purple-400',
    minigames: 'text-yellow-400',
    custom: 'text-pink-400'
  };
  return colors[type as keyof typeof colors] || 'text-calico-gray-400';
}

// Función para obtener el icono del tipo de servidor
function getServerTypeIcon(type: string) {
  const icons = {
    survival: 'M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z',
    creative: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z',
    pvp: 'M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z',
    roleplay: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z',
    minigames: 'M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z',
    custom: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z'
  };
  return icons[type as keyof typeof icons] || icons.custom;
}
---

<Layout title={`${server.name} - ${game.name} | Gaming Community`}>
  <ThemeProvider themeConfig={themeConfig}>
    <!-- Fondo animado personalizado -->
    <div class="fixed inset-0 overflow-hidden pointer-events-none">
      <div class="absolute inset-0 bg-gradient-game opacity-90"></div>
      
      <!-- Partículas animadas específicas del servidor -->
      <div class="absolute inset-0">
        {Array.from({ length: 15 }).map((_, i) => (
          <div 
            class="absolute w-1.5 h-1.5 bg-accent rounded-full animate-pulse-custom"
            style={{
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`,
              animationDelay: `${Math.random() * 2}s`,
              animationDuration: `${2 + Math.random() * 3}s`
            }}
          ></div>
        ))}
      </div>
      
      <!-- Elementos geométricos temáticos -->
      <div class="absolute top-24 left-12 w-36 h-36 border border-primary opacity-15 rotate-45 animate-spin" style="animation-duration: 25s;"></div>
      <div class="absolute bottom-24 right-12 w-20 h-20 border border-secondary opacity-15 rounded-full animate-bounce" style="animation-duration: 3.5s;"></div>
    </div>

    <!-- Contenido principal -->
    <main class="relative z-10 min-h-screen">
      <!-- Header del servidor -->
      <header class="relative overflow-hidden">
        <!-- Imagen de fondo del hero -->
        <div class="absolute inset-0">
          <img 
            src={heroImage} 
            alt={`${server.name} background`}
            class="w-full h-full object-cover"
          />
          <div class="absolute inset-0 bg-gradient-primary opacity-85"></div>
        </div>
        
        <!-- Contenido del header -->
        <div class="relative z-10 container mx-auto px-4 py-12">
          <!-- Navegación -->
          <div class="flex items-center justify-between mb-8">
            <div class="flex items-center space-x-4">
              <a 
                href="/" 
                class="btn-secondary px-4 py-2 rounded-lg font-semibold transition-all duration-300 hover:scale-105 text-sm"
              >
                ← Juegos
              </a>
              <a 
                href={`/${game.name.toLowerCase().replace(/\s+/g, '-')}`}
                class="btn-secondary px-4 py-2 rounded-lg font-semibold transition-all duration-300 hover:scale-105 text-sm"
              >
                ← {game.name}
              </a>
            </div>
            
            {server.is_featured && (
              <div class="flex items-center space-x-2 px-4 py-2 bg-accent rounded-full">
                <svg class="w-5 h-5 text-calico-white" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                </svg>
                <span class="text-calico-white font-semibold text-sm">Destacado</span>
              </div>
            )}
          </div>
          
          <!-- Información del servidor -->
          <div class="flex items-start space-x-6 mb-8">
            <div class="w-20 h-20 rounded-xl overflow-hidden border-4 border-accent shadow-2xl bg-white/10 flex items-center justify-center">
              <svg class="w-10 h-10 text-accent" fill="currentColor" viewBox="0 0 24 24">
                <path d={getServerTypeIcon(server.server_type)}></path>
              </svg>
            </div>
            
            <div class="text-calico-white flex-1">
              <div class="flex items-center space-x-3 mb-2">
                <h1 class="text-3xl md:text-4xl font-bold font-game">{server.name}</h1>
                <span class={`px-3 py-1 rounded-full text-sm font-medium capitalize ${getServerTypeColor(server.server_type)} bg-white/20`}>
                  {server.server_type}
                </span>
              </div>
              
              <p class="text-lg opacity-90 mb-4 max-w-3xl">
                {server.description || `Servidor ${server.server_type} de ${game.name}. Únete y disfruta de una experiencia única.`}
              </p>
              
              <!-- Información técnica del servidor -->
              <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                {server.server_ip && (
                  <div class="glass rounded-lg p-3">
                    <div class="text-xs text-calico-gray-300 mb-1">IP del Servidor</div>
                    <div class="font-mono text-accent font-semibold">{server.server_ip}</div>
                    {server.server_port && (
                      <div class="text-xs text-calico-gray-400">:{server.server_port}</div>
                    )}
                  </div>
                )}
                
                <div class="glass rounded-lg p-3">
                  <div class="text-xs text-calico-gray-300 mb-1">Jugadores</div>
                  <div class="text-accent font-semibold">0 / {server.max_players}</div>
                  <div class="text-xs text-calico-gray-400">En línea</div>
                </div>
                
                {server.server_version && (
                  <div class="glass rounded-lg p-3">
                    <div class="text-xs text-calico-gray-300 mb-1">Versión</div>
                    <div class="text-calico-white font-semibold">{server.server_version}</div>
                  </div>
                )}
                
                <div class="glass rounded-lg p-3">
                  <div class="text-xs text-calico-gray-300 mb-1">Estado</div>
                  <div class="flex items-center space-x-2">
                    <div class="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
                    <span class="text-green-400 font-semibold text-sm">En línea</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Estadísticas del servidor -->
          <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mt-8">
            <div class="glass-calico rounded-xl p-6 text-center text-calico-white">
              <div class="text-3xl font-bold text-accent mb-2">{serverPosts.length}</div>
              <div class="text-sm opacity-80">Posts Totales</div>
            </div>
            <div class="glass rounded-xl p-6 text-center text-calico-white">
              <div class="text-3xl font-bold text-accent mb-2">
                {new Set(serverPosts.map(post => post.user_id)).size}
              </div>
              <div class="text-sm opacity-80">Miembros Activos</div>
            </div>
            <div class="glass rounded-xl p-6 text-center text-calico-white">
              <div class="text-3xl font-bold text-accent mb-2">
                {serverPosts.filter(post => {
                  const postDate = new Date(post.created_at);
                  const weekAgo = new Date();
                  weekAgo.setDate(weekAgo.getDate() - 7);
                  return postDate > weekAgo;
                }).length}
              </div>
              <div class="text-sm opacity-80">Posts Esta Semana</div>
            </div>
            <div class="glass rounded-xl p-6 text-center text-calico-white">
              <div class="text-3xl font-bold text-accent mb-2">
                {Math.floor(Math.random() * 100)}%
              </div>
              <div class="text-sm opacity-80">Uptime</div>
            </div>
          </div>
        </div>
      </header>

      <!-- Sección de posts del servidor -->
      <section class="container mx-auto px-4 py-12">
        <div class="max-w-4xl mx-auto">
          <!-- Formulario para crear post -->
          {currentUser && (
            <div class="mb-12">
              <div class="glass-dark rounded-2xl p-8">
                <h2 class="text-2xl font-bold text-calico-white mb-6 font-game">
                  Comparte tu experiencia en {server.name}
                </h2>
                <PostForm 
                  serverId={server.id}
                  gameId={server.game_id}
                  serverName={server.name}
                  placeholder={`¿Qué está pasando en ${server.name}?`}
                  showNameField={!currentUser}
                />
              </div>
            </div>
          )}
          
          <!-- Lista de posts -->
          <div class="space-y-8">
            <div class="flex items-center justify-between">
              <h2 class="text-3xl font-bold text-calico-white font-game">
                Actividad del servidor
              </h2>
              <div class="text-accent font-medium">
                {serverPosts.length} {serverPosts.length === 1 ? 'post' : 'posts'}
              </div>
            </div>
            
            {serverPosts.length > 0 ? (
              <div class="grid gap-8">
                {serverPosts.map((post) => (
                  <div class="transform transition-all duration-300 hover:scale-[1.02]">
                    <PostCard 
                      post={post} 
                      currentUserId={currentUser?.id}
                    />
                  </div>
                ))}
              </div>
            ) : (
              <div class="text-center py-16">
                <div class="glass rounded-2xl p-12 max-w-md mx-auto">
                  <div class="w-20 h-20 mx-auto mb-6 rounded-full bg-accent flex items-center justify-center">
                    <svg class="w-10 h-10 text-calico-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                    </svg>
                  </div>
                  <h3 class="text-xl font-bold text-calico-white mb-4 font-game">
                    ¡Inicia la conversación!
                  </h3>
                  <p class="text-calico-gray-300 mb-6">
                    No hay publicaciones en {server.name} aún. 
                    {currentUser ? 'Sé el primero en compartir algo.' : 'Inicia sesión para participar en la comunidad.'}
                  </p>
                  {!currentUser && (
                    <a 
                      href="/auth/login" 
                      class="btn-primary px-6 py-3 rounded-lg font-semibold inline-block"
                    >
                      Iniciar Sesión
                    </a>
                  )}
                </div>
              </div>
            )}
          </div>
        </div>
      </section>
    </main>
  </ThemeProvider>
</Layout>

<script>
  // Animaciones y efectos interactivos específicos del servidor
  document.addEventListener('DOMContentLoaded', () => {
    // Efecto parallax suave en el header
    const header = document.querySelector('header');
    const handleScroll = () => {
      const scrolled = window.pageYOffset;
      const rate = scrolled * -0.4;
      if (header) {
        header.style.transform = `translateY(${rate}px)`;
      }
    };
    
    window.addEventListener('scroll', handleScroll);
    
    // Animación de entrada para las tarjetas de posts
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry, index) => {
        if (entry.isIntersecting) {
          setTimeout(() => {
            (entry.target as HTMLElement).style.opacity = '1';
            (entry.target as HTMLElement).style.transform = 'translateY(0) scale(1)';
          }, index * 150);
        }
      });
    }, { threshold: 0.1 });
    
    document.querySelectorAll('.transform').forEach((el) => {
      (el as HTMLElement).style.opacity = '0';
      (el as HTMLElement).style.transform = 'translateY(20px) scale(0.95)';
      (el as HTMLElement).style.transition = 'opacity 0.6s ease, transform 0.6s ease';
      observer.observe(el);
    });
    
    // Efecto de copia para la IP del servidor
    const ipElement = document.querySelector('.font-mono');
    if (ipElement) {
      (ipElement as HTMLElement).style.cursor = 'pointer';
      (ipElement as HTMLElement).title = 'Click para copiar';
      
      ipElement.addEventListener('click', async () => {
        try {
          await navigator.clipboard.writeText(ipElement.textContent || '');
          
          // Mostrar feedback visual
          const originalText = ipElement.textContent;
          ipElement.textContent = '¡Copiado!';
          (ipElement as HTMLElement).style.color = '#10B981';
          
          setTimeout(() => {
            ipElement.textContent = originalText;
            (ipElement as HTMLElement).style.color = '';
          }, 2000);
        } catch (err) {
          // Silent error handling
        }
      });
    }
    
    // Actualización simulada del estado del servidor
    const statusIndicator = document.querySelector('.bg-green-400');
    if (statusIndicator) {
      setInterval(() => {
        (statusIndicator as HTMLElement).style.opacity = (statusIndicator as HTMLElement).style.opacity === '0.5' ? '1' : '0.5';
      }, 1000);
    }

    // Scroll a la publicación si existe ?post=<id> en la URL
    const params = new URLSearchParams(window.location.search);
    const targetId = params.get('post');
    if (targetId) {
      const target = document.querySelector(`[data-post-id="${targetId}"]`);
      if (target) {
        (target as HTMLElement).scrollIntoView({ behavior: 'smooth', block: 'center' });
        (target as HTMLElement).classList.add('ring-2','ring-calico-orange-500');
        setTimeout(() => {
          (target as HTMLElement).classList.remove('ring-2','ring-calico-orange-500');
        }, 2000);
      }
    }
  });
</script>