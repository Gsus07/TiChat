---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Registro - Gaming Hub">
  <!-- Background with animated elements -->
  <div class="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 relative overflow-hidden">
    <!-- Animated background elements -->
    <div class="absolute inset-0">
      <div class="absolute top-20 left-10 w-72 h-72 bg-purple-500/20 rounded-full blur-3xl animate-pulse"></div>
      <div class="absolute bottom-20 right-10 w-96 h-96 bg-blue-500/20 rounded-full blur-3xl animate-pulse delay-1000"></div>
      <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-80 h-80 bg-green-500/10 rounded-full blur-3xl animate-pulse delay-2000"></div>
    </div>

    <!-- Floating particles -->
    <div class="absolute inset-0 overflow-hidden">
      <div class="absolute top-1/4 left-1/4 w-2 h-2 bg-white/30 rounded-full animate-bounce delay-300"></div>
      <div class="absolute top-3/4 left-3/4 w-1 h-1 bg-purple-400/50 rounded-full animate-bounce delay-700"></div>
      <div class="absolute top-1/2 right-1/4 w-1.5 h-1.5 bg-blue-400/40 rounded-full animate-bounce delay-1000"></div>
    </div>

    <!-- Main content -->
    <div class="relative z-10 min-h-screen flex items-center justify-center p-4">
      <div class="w-full max-w-md">
        <!-- Register card -->
        <div class="bg-white/10 backdrop-blur-xl rounded-3xl border border-white/20 shadow-2xl overflow-hidden">
          <!-- Header -->
          <div class="bg-gradient-to-r from-purple-600/20 to-blue-600/20 p-8 text-center border-b border-white/10">
            <div class="w-20 h-20 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full mx-auto mb-4 flex items-center justify-center">
              <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"></path>
              </svg>
            </div>
            <h1 class="text-3xl font-bold text-white mb-2">Únete a nosotros</h1>
            <p class="text-gray-300">Crea tu cuenta en Gaming Hub</p>
          </div>

          <!-- Register form -->
          <div class="p-8">
            <form id="registerForm" class="space-y-6">
              <!-- Name field -->
              <div class="space-y-2">
                <label for="name" class="block text-sm font-medium text-gray-300">Nombre Completo</label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                    </svg>
                  </div>
                  <input 
                    type="text" 
                    id="name" 
                    name="name"
                    placeholder="Tu nombre completo"
                    class="w-full pl-10 pr-4 py-3 bg-white/5 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300"
                    required
                  />
                </div>
              </div>

              <!-- Username field -->
              <div class="space-y-2">
                <label for="username" class="block text-sm font-medium text-gray-300">Nombre de Usuario</label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
                    </svg>
                  </div>
                  <input 
                    type="text" 
                    id="username" 
                    name="username"
                    placeholder="tu_usuario"
                    class="w-full pl-10 pr-4 py-3 bg-white/5 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300"
                    required
                    minlength="3"
                    maxlength="50"
                    pattern="[a-zA-Z0-9_]+"
                    title="Solo letras, números y guiones bajos"
                  />
                </div>
              </div>

              <!-- Email field -->
              <div class="space-y-2">
                <label for="email" class="block text-sm font-medium text-gray-300">Correo Electrónico</label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207"></path>
                    </svg>
                  </div>
                  <input 
                    type="email" 
                    id="email" 
                    name="email"
                    placeholder="tu@email.com"
                    class="w-full pl-10 pr-4 py-3 bg-white/5 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300"
                    required
                  />
                </div>
              </div>

              <!-- Password field -->
              <div class="space-y-2">
                <label for="password" class="block text-sm font-medium text-gray-300">Contraseña</label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                    </svg>
                  </div>
                  <input 
                    type="password" 
                    id="password" 
                    name="password"
                    placeholder="••••••••"
                    class="w-full pl-10 pr-12 py-3 bg-white/5 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300"
                    required
                    minlength="6"
                  />
                  <button 
                    type="button" 
                    id="togglePassword"
                    class="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-white transition-colors"
                  >
                    <svg id="eyeIcon" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                    </svg>
                  </button>
                </div>
                <div class="text-xs text-gray-400 mt-1">
                  Mínimo 6 caracteres
                </div>
              </div>

              <!-- Confirm Password field -->
              <div class="space-y-2">
                <label for="confirmPassword" class="block text-sm font-medium text-gray-300">Confirmar Contraseña</label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                  </div>
                  <input 
                    type="password" 
                    id="confirmPassword" 
                    name="confirmPassword"
                    placeholder="••••••••"
                    class="w-full pl-10 pr-4 py-3 bg-white/5 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300"
                    required
                  />
                </div>
              </div>

              <!-- Terms and conditions -->
              <div class="flex items-start">
                <input 
                  type="checkbox" 
                  id="terms" 
                  name="terms"
                  class="w-4 h-4 mt-1 text-purple-600 bg-white/10 border-white/20 rounded focus:ring-purple-500 focus:ring-2"
                  required
                >
                <label for="terms" class="ml-3 text-sm text-gray-300">
                  Acepto los 
                  <a href="#" class="text-purple-400 hover:text-purple-300 transition-colors">términos y condiciones</a>
                  y la 
                  <a href="#" class="text-purple-400 hover:text-purple-300 transition-colors">política de privacidad</a>
                </label>
              </div>

              <!-- Register button -->
              <button 
                type="submit" 
                class="w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white font-semibold py-3 px-6 rounded-xl transition-all duration-300 transform hover:scale-105 hover:shadow-lg hover:shadow-purple-500/25 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-transparent"
              >
                <span id="registerButtonText">Crear Cuenta</span>
                <svg id="registerSpinner" class="hidden animate-spin -mr-1 ml-3 h-5 w-5 text-white inline" fill="none" viewBox="0 0 24 24">
                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              </button>
            </form>

            <!-- Divider -->
            <div class="my-8 flex items-center">
              <div class="flex-1 border-t border-white/20"></div>
              <span class="px-4 text-sm text-gray-400">o</span>
              <div class="flex-1 border-t border-white/20"></div>
            </div>

            <!-- Social register buttons -->
            <div class="space-y-3">
              <button class="w-full flex items-center justify-center px-4 py-3 bg-white/5 border border-white/20 rounded-xl text-white hover:bg-white/10 transition-all duration-300 group">
                <svg class="w-5 h-5 mr-3" viewBox="0 0 24 24">
                  <path fill="currentColor" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
                  <path fill="currentColor" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
                  <path fill="currentColor" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
                  <path fill="currentColor" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
                </svg>
                <span class="group-hover:text-white transition-colors">Registrarse con Google</span>
              </button>
              
              <button class="w-full flex items-center justify-center px-4 py-3 bg-white/5 border border-white/20 rounded-xl text-white hover:bg-white/10 transition-all duration-300 group">
                <svg class="w-5 h-5 mr-3" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
                </svg>
                <span class="group-hover:text-white transition-colors">Registrarse con Facebook</span>
              </button>
            </div>

            <!-- Login link -->
            <div class="mt-8 text-center">
              <p class="text-gray-400">
                ¿Ya tienes una cuenta? 
                <a href="/login" class="text-purple-400 hover:text-purple-300 font-medium transition-colors">Inicia sesión aquí</a>
              </p>
            </div>
          </div>
        </div>

        <!-- Back to home -->
        <div class="mt-6 text-center">
          <a href="/" class="inline-flex items-center text-gray-400 hover:text-white transition-colors">
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
            </svg>
            Volver al inicio
          </a>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Toggle password visibility
    const togglePassword = document.getElementById('togglePassword');
    const passwordInput = document.getElementById('password');
    const eyeIcon = document.getElementById('eyeIcon');

    togglePassword?.addEventListener('click', () => {
      const type = passwordInput?.getAttribute('type') === 'password' ? 'text' : 'password';
      passwordInput?.setAttribute('type', type);
      
      // Toggle eye icon
      if (type === 'text') {
        eyeIcon!.innerHTML = `
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21"></path>
        `;
      } else {
        eyeIcon!.innerHTML = `
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
        `;
      }
    });

    // Password validation
    const confirmPasswordInput = document.getElementById('confirmPassword');
    
    function validatePasswords() {
      const password = passwordInput instanceof HTMLInputElement ? passwordInput.value : '';
      const confirmPassword = confirmPasswordInput instanceof HTMLInputElement ? confirmPasswordInput.value : '';
      
      if (confirmPassword && password !== confirmPassword) {
        if (confirmPasswordInput) {
          (confirmPasswordInput as HTMLInputElement).setCustomValidity('Las contraseñas no coinciden');
          confirmPasswordInput.classList.add('border-red-500');
          confirmPasswordInput.classList.remove('border-white/20');
        }
      } else {
        if (confirmPasswordInput) {
          (confirmPasswordInput as HTMLInputElement).setCustomValidity('');
          confirmPasswordInput.classList.remove('border-red-500');
          confirmPasswordInput.classList.add('border-white/20');
        }
      }
    }

    passwordInput?.addEventListener('input', validatePasswords);
    confirmPasswordInput?.addEventListener('input', validatePasswords);

    // Handle form submission
    const registerForm = document.getElementById('registerForm');
    const registerButtonText = document.getElementById('registerButtonText');
    const registerSpinner = document.getElementById('registerSpinner');

    registerForm?.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      // Show loading state
      registerButtonText!.textContent = 'Creando cuenta...';
      registerSpinner?.classList.remove('hidden');
      
      // Get form data
      const formData = new FormData(registerForm as HTMLFormElement);
      const name = formData.get('name') as string;
      const username = formData.get('username') as string;
      const email = formData.get('email') as string;
      const password = formData.get('password') as string;
      const confirmPassword = formData.get('confirmPassword') as string;
      const terms = formData.get('terms');
      
      try {
        // Validate passwords match
        if (password !== confirmPassword) {
          throw new Error('Las contraseñas no coinciden');
        }
        
        // Validate terms acceptance
        if (!terms) {
          throw new Error('Debes aceptar los términos y condiciones');
        }
        
        // Call registration API
        const response = await fetch('/api/auth', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            email,
            password,
            username,
            full_name: name
          })
        });
        
        const result = await response.json();
        
        if (!response.ok) {
          throw new Error(result.error || 'Error al crear la cuenta');
        }
        
        // Show success message
        showNotification('¡Cuenta creada exitosamente! Ahora puedes iniciar sesión', 'success');
        
        // Redirect to login
        setTimeout(() => {
          window.location.href = '/login';
        }, 1500);
        
      } catch (error: any) {
        console.error('Registration error:', error);
        showNotification(error.message || 'Error al crear la cuenta', 'error');
      } finally {
        // Reset button state
        registerButtonText!.textContent = 'Crear Cuenta';
        registerSpinner?.classList.add('hidden');
      }
    });

    // Notification system
    function showNotification(message: string, type: 'success' | 'error') {
      const notification = document.createElement('div');
      notification.className = `fixed top-4 right-4 z-50 px-6 py-4 rounded-lg shadow-lg transform transition-all duration-300 translate-x-full ${
        type === 'success' 
          ? 'bg-green-500/90 text-white border border-green-400/50' 
          : 'bg-red-500/90 text-white border border-red-400/50'
      }`;
      notification.innerHTML = `
        <div class="flex items-center">
          <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            ${type === 'success' 
              ? '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>'
              : '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>'
            }
          </svg>
          <span>${message}</span>
        </div>
      `;
      
      document.body.appendChild(notification);
      
      // Animate in
      setTimeout(() => {
        notification.classList.remove('translate-x-full');
      }, 100);
      
      // Remove after 4 seconds
      setTimeout(() => {
        notification.classList.add('translate-x-full');
        setTimeout(() => {
          document.body.removeChild(notification);
        }, 300);
      }, 4000);
    }

    // Check if user is already logged in
    const existingSession = localStorage.getItem('userSession') || sessionStorage.getItem('userSession');
    if (existingSession) {
      window.location.href = '/';
    }
  </script>
</Layout>