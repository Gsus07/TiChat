---
import Layout from '../../layouts/Layout.astro';
import PostCard from '../../components/PostCard.astro';

// Función requerida para rutas dinámicas
export async function getStaticPaths() {
  // Retornamos rutas vacías ya que los servidores se crean dinámicamente
  // Las páginas se generarán en el cliente
  return [];
}

// Configurar para renderizado en el cliente
export const prerender = false;

// Esta página maneja servidores dinámicos creados por el usuario
const { server } = Astro.params;

// Datos por defecto para servidores personalizados
const defaultServerData = {
  name: 'Servidor Personalizado',
  description: 'Un servidor creado por la comunidad',
  ip: 'servidor.com',
  port: '25565',
  version: '1.20.1',
  players: `${Math.floor(Math.random() * 20) + 5}/50`,
  status: 'En línea',
  image: '/minecraft-custom.jpg',
  id: ''
};

// Intentar obtener datos del servidor desde el parámetro
let serverData = defaultServerData;

// Si el servidor es personalizado, intentar cargar datos específicos
if (server && server.startsWith('custom-')) {
  // En el cliente, los datos se cargarán desde localStorage
  // Aquí usamos datos por defecto que se actualizarán en el cliente
  const serverId = server.replace('custom-', '');
  serverData = {
    ...defaultServerData,
    name: 'Servidor Personalizado',
    description: 'Cargando datos del servidor...',
    id: serverId
  };
}
---

<Layout title={`${serverData.name} - Minecraft Server`}>
  <main class="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 relative overflow-hidden">
    <!-- Elementos animados de fondo -->
    <div class="absolute inset-0 overflow-hidden pointer-events-none">
      <div class="absolute top-20 left-10 w-32 h-32 bg-green-500/10 rounded-full blur-xl animate-pulse"></div>
      <div class="absolute top-40 right-20 w-24 h-24 bg-emerald-500/10 rounded-full blur-xl animate-pulse delay-1000"></div>
      <div class="absolute bottom-20 left-1/4 w-40 h-40 bg-green-400/5 rounded-full blur-xl animate-pulse delay-2000"></div>
      <div class="absolute bottom-40 right-1/3 w-28 h-28 bg-emerald-400/5 rounded-full blur-xl animate-pulse delay-3000"></div>
    </div>

    <div class="relative z-10 container mx-auto px-4 py-8">
      <!-- Header del servidor -->
      <div class="bg-white/5 backdrop-blur-sm rounded-2xl p-8 border border-white/10 mb-8">
        <div class="flex flex-col lg:flex-row items-start lg:items-center gap-6">
          <div class="relative">
            <div class="absolute inset-0 bg-gradient-to-r from-green-400 to-emerald-400 rounded-2xl blur opacity-75"></div>
            <img src={serverData.image} alt={serverData.name} class="relative w-24 h-24 rounded-2xl object-cover border-2 border-white/20">
          </div>
          
          <div class="flex-1">
            <h1 class="text-4xl font-bold text-white mb-2">{serverData.name}</h1>
            <p class="text-gray-300 text-lg mb-4">{serverData.description}</p>
            
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div class="bg-white/5 rounded-lg p-4 border border-white/10">
                <div class="text-sm text-gray-400 mb-1">Jugadores</div>
                <div class="text-xl font-bold text-green-400">{serverData.players}</div>
              </div>
              <div class="bg-white/5 rounded-lg p-4 border border-white/10">
                <div class="text-sm text-gray-400 mb-1">Estado</div>
                <div class="text-xl font-bold text-green-400">{serverData.status}</div>
              </div>
              <div class="bg-white/5 rounded-lg p-4 border border-white/10">
                <div class="text-sm text-gray-400 mb-1">Versión</div>
                <div class="text-xl font-bold text-white">{serverData.version}</div>
              </div>
            </div>
          </div>
          
          <div class="bg-white/5 rounded-lg p-4 border border-white/10">
            <div class="text-sm text-gray-400 mb-2">Dirección del servidor</div>
            <div class="text-green-400 font-mono text-lg">{serverData.ip}:{serverData.port}</div>
            <button class="mt-3 bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg transition-colors w-full">
              Copiar IP
            </button>
          </div>
        </div>
      </div>

      <!-- Formulario para nueva publicación -->
      <div class="bg-white/5 backdrop-blur-sm rounded-2xl p-6 border border-white/10 mb-8">
        <h2 class="text-xl font-bold text-white mb-4">Comparte tu experiencia</h2>
        <form class="space-y-4">
          <textarea 
            placeholder="¿Que esta pasando en el servidor?" 
            class="w-full bg-white/5 border border-white/20 rounded-lg p-4 text-white placeholder-gray-400 resize-none focus:outline-none focus:ring-2 focus:ring-green-500" 
            rows="3"
          ></textarea>
          <div class="flex items-center justify-between">
            <div class="flex items-center space-x-4">
              <button type="button" class="text-gray-400 hover:text-white transition-colors">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                </svg>
              </button>
              <button type="button" class="text-gray-400 hover:text-white transition-colors">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2m-9 0h10m-10 0a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V6a2 2 0 00-2-2m-5 4v6m2-3H9"></path>
                </svg>
              </button>
            </div>
            <button type="submit" class="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg transition-colors">
              Publicar
            </button>
          </div>
        </form>
      </div>

      <!-- Muro de publicaciones -->
      <div class="space-y-6">
        <h2 class="text-2xl font-bold text-white mb-6">Muro del Servidor</h2>
        
        <!-- Publicaciones de ejemplo para servidores personalizados -->
        <PostCard 
          author="Administrador"
          time="Hace 2 horas"
          content="¡Bienvenidos al servidor! Esperamos que disfruten su experiencia aqui. Recuerden seguir las reglas y divertirse."
          image=""
          likes={15}
          comments={3}
        />
        
        <PostCard 
          author="Jugador_Pro"
          time="Hace 4 horas"
          content="Este servidor esta increible! La comunidad es muy amigable y hay muchas cosas que hacer."
          image=""
          likes={8}
          comments={2}
        />
        
        <PostCard 
          author="Constructor_Master"
          time="Hace 6 horas"
          content="Termine mi nueva construccion en el servidor. ¡Vengan a verla en las coordenadas X:250 Z:180!"
          image="/minecraft-build.jpg"
          likes={23}
          comments={7}
        />
        
        <PostCard 
          author="Explorador_2023"
          time="Hace 8 horas"
          content="Encontre una cueva super grande llena de diamantes. ¿Alguien quiere venir a explorar conmigo?"
          image=""
          likes={12}
          comments={5}
        />
        
        <PostCard 
          author="Granjero_Feliz"
          time="Hace 1 día"
          content="Mi granja automatica de trigo ya esta funcionando perfectamente. ¡Comida gratis para todos!"
          image="/minecraft-farm.jpg"
          likes={18}
          comments={4}
        />
      </div>
    </div>
  </main>

  <script>
    // Cargar datos del servidor personalizado desde localStorage
    document.addEventListener('DOMContentLoaded', function() {
      const currentPath = window.location.pathname;
      const serverMatch = currentPath.match(/\/minecraft\/(custom-.+)/);
      
      if (serverMatch) {
        const serverSlug = serverMatch[1];
        // Buscar el servidor en la lista de servidores personalizados
        const customServers = JSON.parse(localStorage.getItem('minecraft_customServers') || '[]');
        const serverData = customServers.find(server => server.link === `/minecraft/${serverSlug}`);
        
        if (serverData && serverData.name) {
          // Actualizar título de la página
          document.title = `${serverData.name} - Minecraft Server`;
          
          // Actualizar elementos de la página con datos del servidor
          const nameElement = document.querySelector('h1');
          if (nameElement) nameElement.textContent = serverData.name;
          
          const descElement = document.querySelector('h1 + p');
          if (descElement) descElement.textContent = serverData.description;
          
          const ipElement = document.querySelector('.font-mono');
          if (ipElement) ipElement.textContent = `${serverData.ip}:${serverData.port}`;
          
          const versionElement = document.querySelector('.text-xl.font-bold.text-white');
          if (versionElement) versionElement.textContent = serverData.version;
          
          const imageElement = document.querySelector('img[alt]') as HTMLImageElement;
          if (imageElement) {
            imageElement.src = serverData.image;
            imageElement.alt = serverData.name;
          }
        }
      }
      
      // Funcionalidad para copiar IP del servidor
      const copyButtons = document.querySelectorAll('button');
      copyButtons.forEach(button => {
        if (button.textContent && button.textContent.includes('Copiar IP')) {
          button.addEventListener('click', function() {
            const serverIPElement = this.parentElement?.querySelector('.font-mono') as HTMLElement;
            const serverIP = serverIPElement?.textContent || '';
            navigator.clipboard.writeText(serverIP).then(function() {
              // Cambiar texto del boton temporalmente
              const originalText = button.textContent;
              button.textContent = 'Copiado!';
              button.classList.add('bg-green-700');
              
              setTimeout(function() {
                button.textContent = originalText;
                button.classList.remove('bg-green-700');
              }, 2000);
            });
          });
        }
      });
    });
  </script>
</Layout>