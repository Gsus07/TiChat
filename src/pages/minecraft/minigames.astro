---
// src/pages/minecraft/minigames.astro
import Layout from '../../layouts/Layout.astro';
import PostCard from '../../components/PostCard.astro';
import PostForm from '../../components/react/PostForm.tsx';
import { getPostsByServerId } from '../../utils/posts';
import { supabase } from '../../utils/supabaseClient';

// Obtener el usuario actual
const { data: { user } } = await supabase.auth.getUser();
const currentUserId = user?.id;

// Obtener posts del servidor (usando ID fijo para minigames)
const serverId = 'minigames';
const posts = await getPostsByServerId(serverId, currentUserId);
---

<Layout title="Minecraft - Servidor Minijuegos">
  <main class="min-h-screen bg-gradient-to-br from-pink-900 to-rose-900 py-12 px-4">
    <div class="max-w-4xl mx-auto">
      <!-- Header del Servidor -->
      <div class="bg-white/10 backdrop-blur-md rounded-xl p-6 mb-8">
        <div class="flex items-center justify-between mb-4">
          <a href="/minecraft" class="inline-flex items-center text-pink-300 hover:text-pink-200 transition-colors">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
            Volver a Minecraft
          </a>
        </div>
        
        <div class="flex items-center mb-4">
          <img src="/minecraft-minigames.jpg" alt="Servidor Minijuegos" class="w-16 h-16 rounded-lg mr-4 object-cover">
          <div>
            <h1 class="text-3xl font-bold text-white mb-2">Servidor Minijuegos</h1>
            <p class="text-gray-300">Diversión y competencia sin límites</p>
          </div>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
          <div class="bg-white/5 rounded-lg p-3">
            <div class="flex items-center text-pink-300 mb-1">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 515.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
              </svg>
              <span class="font-medium">Jugadores</span>
            </div>
            <span class="text-lg font-medium">32 En línea</span>
          </div>
          <div class="bg-white/5 rounded-lg p-3">
            <div class="flex items-center text-yellow-300 mb-1">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
              </svg>
              <span class="font-medium">Estado</span>
            </div>
            <span class="text-lg font-medium">En línea</span>
          </div>
          <div class="bg-white/5 rounded-lg p-3">
            <div class="flex items-center text-rose-300 mb-1">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
              </svg>
              <span class="font-medium">Versión</span>
            </div>
            <span class="text-lg font-medium">1.20.1</span>
          </div>
        </div>
      </div>

      <!-- Formulario para nueva publicación -->
      <PostForm 
        client:load
        serverName="minigames"
        placeholder="¿En qué minijuego ganaste hoy?"
        showNameField={false}
      />

      <!-- Muro de publicaciones -->
      <div class="space-y-6">
        {posts.data && posts.data.length > 0 ? (
          posts.data.map((post: any) => (
            <PostCard 
              post={post}
              currentUserId={currentUserId}
            />
          ))
        ) : (
          <div class="bg-white/10 backdrop-blur-md rounded-xl p-8 text-center">
            <p class="text-gray-300 text-lg">No hay posts aún en este servidor.</p>
            <p class="text-gray-400 mt-2">¡Sé el primero en compartir algo!</p>
          </div>
        )}
      </div>
    </div>
  </main>
</Layout>