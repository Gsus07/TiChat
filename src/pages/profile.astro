---
import Layout from '../layouts/Layout.astro';
import ProfileEditModal from '../components/react/ProfileEditModal.tsx';
import { getFavoriteGamesByPosts, getUserRecentActivity } from '../utils/favorites';

// Mock user data - in a real app, this would come from authentication
const user = {
  username: 'Usuario',
  email: 'usuario@ejemplo.com',
  bio: 'Gamer apasionado que disfruta de diversos juegos multijugador.'
};

// Mock user ID for demonstration - in real app, get from session
const userId = '550e8400-e29b-41d4-a716-446655440000';

// Get dynamic data
let favoriteGames: any[] = [];
let recentActivity: any[] = [];

try {
  const [favGamesResult, activityResult] = await Promise.all([
    getFavoriteGamesByPosts(userId, 3),
    getUserRecentActivity(userId, 5)
  ]);
  
  favoriteGames = favGamesResult.data || [];
  recentActivity = activityResult.data || [];
} catch (error) {
  console.error('Error loading profile data:', error);
}
---

<Layout title="Perfil de Usuario">
  <div class="min-h-screen bg-gradient-to-br from-calico-gray-900 via-calico-orange-900 to-calico-gray-900 pt-16 pb-8">
    <!-- Animated background elements -->
    <div class="absolute inset-0 overflow-hidden z-0">
      <div class="absolute -top-40 -right-40 w-80 h-80 bg-calico-orange-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse z-0"></div>
<div class="absolute -bottom-40 -left-40 w-80 h-80 bg-calico-gray-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse animation-delay-2000 z-0"></div>
      <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-indigo-500 rounded-full mix-blend-multiply filter blur-xl opacity-10 animate-pulse animation-delay-4000 z-0"></div>
    </div>

    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <!-- Header del perfil -->
        <div class="glass-calico rounded-xl p-6 mb-8">
        <div class="bg-gradient-to-r from-calico-orange/20 to-calico-brown/20 p-8 border-b border-calico-stripe-light/20">
          <div class="flex flex-col md:flex-row items-center md:items-start space-y-4 md:space-y-0 md:space-x-6">
            <!-- Avatar -->
            <div class="relative">
              <img id="profileAvatar" src="/default-avatar.png" alt="Avatar" class="w-32 h-32 rounded-full border-4 border-purple-500 shadow-lg">
              <button id="changeAvatarBtn" class="absolute bottom-2 right-2 bg-calico-orange-600 hover:bg-calico-orange-700 text-calico-white p-2 rounded-full transition-colors shadow-lg">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
              </button>
            </div>

            <!-- User Info -->
            <div class="flex-1 text-center md:text-left">
            <h1 id="profileName" class="text-3xl font-bold text-calico-white mb-2">{user.username}</h1>
            <p id="profileEmail" class="text-calico-gray-300 mb-4">{user.email}</p>
              <div class="flex flex-wrap justify-center md:justify-start gap-2">
                <span class="bg-calico-orange/20 text-calico-orange px-3 py-1 rounded-full text-sm border border-calico-orange/30">Gamer</span>
                <span class="bg-calico-brown/20 text-calico-brown px-3 py-1 rounded-full text-sm border border-calico-brown/30">Miembro desde <span id="memberSince">2024</span></span>
              </div>
            </div>

            <!-- Edit Button -->
            <button id="editProfileBtn" class="bg-gradient-to-r from-calico-orange to-calico-brown hover:from-calico-orange/80 hover:to-calico-brown/80 text-calico-white px-6 py-3 rounded-xl transition-all duration-300 hover:shadow-xl shadow-lg">
              <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
              </svg>
              Editar Perfil
            </button>
          </div>
        </div>
      </div>

      <!-- Profile Content -->
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <!-- Main Content -->
        <div class="lg:col-span-2 space-y-8">
          <!-- Gaming Stats -->
          <div class="glass-calico backdrop-blur-xl rounded-2xl border border-calico-stripe-light/20 p-6">
            <h2 class="text-2xl font-bold text-calico-white mb-6 flex items-center">
              <svg class="w-6 h-6 mr-3 text-calico-orange" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
              </svg>
              Estad√≠sticas de Juego
            </h2>
            
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div class="bg-gradient-to-r from-green-500/20 to-emerald-500/20 rounded-xl p-4 border border-green-500/30">
                <div class="flex items-center justify-between">
                  <div>
                    <p class="text-green-300 text-sm font-medium">Horas Jugadas</p>
                    <p class="text-2xl font-bold text-calico-white">247</p>
                  </div>
                  <div class="w-12 h-12 bg-green-500/20 rounded-lg flex items-center justify-center">
                    <svg class="w-6 h-6 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                  </div>
                </div>
              </div>
              
              <div class="bg-gradient-to-r from-blue-500/20 to-cyan-500/20 rounded-xl p-4 border border-blue-500/30">
                <div class="flex items-center justify-between">
                  <div>
                    <p class="text-blue-300 text-sm font-medium">Partidas Jugadas</p>
                    <p class="text-2xl font-bold text-calico-white">156</p>
                  </div>
                  <div class="w-12 h-12 bg-calico-blue-500/20 rounded-lg flex items-center justify-center">
                    <svg class="w-6 h-6 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                  </div>
                </div>
              </div>
              
              <div class="bg-gradient-to-r from-purple-500/20 to-pink-500/20 rounded-xl p-4 border border-purple-500/30">
                <div class="flex items-center justify-between">
                  <div>
                    <p class="text-purple-300 text-sm font-medium">Logros</p>
                    <p class="text-2xl font-bold text-calico-white">23</p>
                  </div>
                  <div class="w-12 h-12 bg-calico-orange-500/20 rounded-lg flex items-center justify-center">
                    <svg class="w-6 h-6 text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z"></path>
                    </svg>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Recent Activity -->
          <div class="glass-calico backdrop-blur-xl rounded-2xl border border-calico-stripe-light/20 p-6">
            <h2 class="text-2xl font-bold text-calico-white mb-6 flex items-center">
              <svg class="w-6 h-6 mr-3 text-calico-orange" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
              </svg>
              Actividad Reciente
            </h2>
            
            <div id="recentActivityContainer" class="space-y-4">
              {recentActivity.length > 0 ? (
                recentActivity.map((activity) => (
                  <div class="flex items-center space-x-4 p-4 bg-calico-orange/5 rounded-xl border border-calico-orange/20">
                    <div class="w-10 h-10 bg-calico-orange/20 rounded-lg flex items-center justify-center">
                      <svg class="w-5 h-5 text-calico-orange" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
                      </svg>
                    </div>
                    <div class="flex-1">
                      <p class="text-calico-gray-900 font-medium">{activity.text}</p>
                      <p class="text-calico-gray-600 text-sm">{activity.time}</p>
                    </div>
                  </div>
                ))
              ) : (
                <div class="flex items-center space-x-4 p-4 bg-calico-orange/5 rounded-xl border border-calico-orange/20">
                  <div class="w-10 h-10 bg-calico-orange/20 rounded-lg flex items-center justify-center">
                    <svg class="w-5 h-5 text-calico-orange" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
                    </svg>
                  </div>
                  <div class="flex-1">
                    <p class="text-calico-gray-900 font-medium">No hay actividad reciente</p>
                    <p class="text-calico-gray-600 text-sm">Comienza a publicar en tus juegos favoritos</p>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>

        <!-- Sidebar -->
        <div class="space-y-8">
          <!-- Quick Actions -->
          <div class="glass-calico backdrop-blur-xl rounded-2xl border border-calico-stripe-light/20 p-6">
            <h3 class="text-xl font-bold text-calico-white mb-4">Acciones R√°pidas</h3>
            <div class="space-y-3">
              <button class="w-full bg-gradient-to-r from-calico-orange/20 to-calico-brown/20 hover:from-calico-orange/30 hover:to-calico-brown/30 text-calico-orange border border-calico-orange/30 px-4 py-3 rounded-xl transition-all duration-300 text-left flex items-center">
                <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
                </svg>
                Conectar a Minecraft
              </button>
              
              <button class="w-full bg-gradient-to-r from-calico-gray/20 to-calico-orange/20 hover:from-calico-gray/30 hover:to-calico-orange/30 text-calico-gray-200 border border-calico-gray/30 px-4 py-3 rounded-xl transition-all duration-300 text-left flex items-center">
                <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                </svg>
                Buscar Partida
              </button>
              
              <button class="w-full bg-gradient-to-r from-calico-brown/20 to-calico-orange/20 hover:from-calico-brown/30 hover:to-calico-orange/30 text-calico-brown border border-calico-brown/30 px-4 py-3 rounded-xl transition-all duration-300 text-left flex items-center">
                <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
                Configuraciones
              </button>
            </div>
          </div>

          <!-- Favorite Games -->
          <div class="glass-calico backdrop-blur-xl rounded-2xl border border-calico-stripe-light/20 p-6">
            <h3 class="text-xl font-bold text-calico-white mb-4">Juegos Favoritos</h3>
            <div id="favoriteGamesContainer" class="space-y-3">
              {favoriteGames.length > 0 ? (
                favoriteGames.map((game) => (
                  <div class="flex items-center space-x-3 p-3 bg-calico-orange/5 rounded-xl border border-calico-orange/20">
                    <img src={game.cover_image_url || '/default-game-icon.png'} alt={game.name} class="w-10 h-10 rounded-lg object-cover">
                    <div>
                      <p class="text-calico-gray-900 font-medium">{game.name}</p>
                      <p class="text-calico-gray-600 text-sm">{game.post_count} post{game.post_count !== 1 ? 's' : ''}</p>
                    </div>
                  </div>
                ))
              ) : (
                <div class="flex items-center space-x-3 p-3 bg-calico-orange/5 rounded-xl border border-calico-orange/20">
                  <div class="w-10 h-10 bg-calico-orange/20 rounded-lg flex items-center justify-center">
                    <svg class="w-5 h-5 text-calico-orange" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                    </svg>
                  </div>
                  <div>
                    <p class="text-calico-gray-900 font-medium">No hay juegos favoritos</p>
                    <p class="text-calico-gray-600 text-sm">Haz posts en tus juegos favoritos</p>
                  </div>
                </div>
              )}
            </div>
            {user.bio && <p class="text-calico-gray-300 mt-4 text-sm">{user.bio}</p>}
          </div>
        </div>
      </div>
    </div>

    <!-- React Profile Edit Modal -->
    <ProfileEditModal client:load isOpen={false} onClose={() => {}} />
  </main>

  <script>
    // Check if user is logged in
    function checkAuth() {
      const userSession = localStorage.getItem('userSession') || sessionStorage.getItem('userSession');
      if (!userSession) {
        console.log('No user session found in storage');
        return null;
      }
      
      try {
        const session = JSON.parse(userSession);
        console.log('Found valid user session:', session.user?.username);
        return session;
      } catch (error) {
        console.error('Error parsing user session:', error);
        localStorage.removeItem('userSession');
        sessionStorage.removeItem('userSession');
        return null;
      }
    }

    // Create a test user session if none exists
    function createTestSession() {
      const testSession = {
        user: {
          id: '550e8400-e29b-41d4-a716-446655440000',
          username: 'TestUser',
          email: 'test@example.com',
          full_name: 'Usuario de Prueba',
          avatar: '/default-avatar.png',
          createdAt: '2024-01-01T00:00:00Z'
        },
        access_token: 'test-token',
        loginTime: new Date().toISOString(),
        rememberMe: false
      };
      
      localStorage.setItem('userSession', JSON.stringify(testSession));
      console.log('Created test user session:', testSession);
      return testSession;
    }

    // Load favorite games dynamically
    async function loadFavoriteGames(userId: string) {
      try {
        const response = await fetch(`/api/users/${userId}/favorite-games`);
        if (!response.ok) {
          throw new Error('Failed to fetch favorite games');
        }
        const result = await response.json();
        const favoriteGames = result.data || [];
        
        const container = document.getElementById('favoriteGamesContainer');
        if (!container) return;
        
        if (favoriteGames.length > 0) {
          container.innerHTML = favoriteGames.map((game: any) => `
            <div class="flex items-center space-x-3 p-3 bg-calico-orange/5 rounded-xl border border-calico-orange/20">
              <img src="${game.cover_image_url || '/default-game-icon.png'}" alt="${game.name}" class="w-10 h-10 rounded-lg object-cover">
              <div>
                <p class="text-calico-gray-900 font-medium">${game.name}</p>
                <p class="text-calico-gray-600 text-sm">${game.post_count} post${game.post_count !== 1 ? 's' : ''}</p>
              </div>
            </div>
          `).join('');
        } else {
          container.innerHTML = `
            <div class="flex items-center space-x-3 p-3 bg-calico-orange/5 rounded-xl border border-calico-orange/20">
              <div class="w-10 h-10 bg-calico-orange/20 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-calico-orange" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
              </div>
              <div>
                <p class="text-calico-gray-900 font-medium">No hay juegos favoritos</p>
                <p class="text-calico-gray-600 text-sm">Haz posts en tus juegos favoritos</p>
              </div>
            </div>
          `;
        }
        
        console.log('Loaded favorite games:', favoriteGames);
      } catch (error) {
        console.error('Error loading favorite games:', error);
      }
    }
    
    // Load recent activity dynamically
    async function loadRecentActivity(userId: string) {
      try {
        const response = await fetch(`/api/users/${userId}/recent-activity`);
        if (!response.ok) {
          throw new Error('Failed to fetch recent activity');
        }
        const result = await response.json();
        const recentActivity = result.data || [];
        
        const container = document.getElementById('recentActivityContainer');
        if (!container) return;
        
        if (recentActivity.length > 0) {
          container.innerHTML = recentActivity.map((activity: any) => `
            <div class="flex items-center space-x-4 p-4 bg-calico-orange/5 rounded-xl border border-calico-orange/20">
              <div class="w-10 h-10 bg-calico-orange/20 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-calico-orange" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
                </svg>
              </div>
              <div class="flex-1">
                <p class="text-calico-gray-900 font-medium">${activity.text}</p>
                <p class="text-calico-gray-600 text-sm">${activity.time}</p>
              </div>
            </div>
          `).join('');
        } else {
          container.innerHTML = `
            <div class="flex items-center space-x-4 p-4 bg-calico-orange/5 rounded-xl border border-calico-orange/20">
              <div class="w-10 h-10 bg-calico-orange/20 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-calico-orange" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
                </svg>
              </div>
              <div class="flex-1">
                <p class="text-calico-gray-900 font-medium">No hay actividad reciente</p>
                <p class="text-calico-gray-600 text-sm">Comienza a publicar en tus juegos favoritos</p>
              </div>
            </div>
          `;
        }
        
        console.log('Loaded recent activity:', recentActivity);
      } catch (error) {
        console.error('Error loading recent activity:', error);
      }
    }

    // Load user profile data
    async function loadProfile() {
      let session = checkAuth();
      
      // If no session exists, create a test session for development
      if (!session) {
        console.log('No session found, creating test session...');
        session = createTestSession();
      }
      
      const user = session.user;
      console.log('Loading profile for user:', user);
      
      // Update profile elements
      const profileName = document.getElementById('profileName');
      const profileEmail = document.getElementById('profileEmail');
      const profileAvatar = document.getElementById('profileAvatar') as HTMLImageElement;
      
      if (profileName) {
        profileName.textContent = user.full_name || user.username || 'Usuario';
        console.log('Updated profile name:', profileName.textContent);
      }
      if (profileEmail) {
        profileEmail.textContent = user.email;
        console.log('Updated profile email:', profileEmail.textContent);
      }
      if (profileAvatar) {
        profileAvatar.src = user.avatar || '/default-avatar.png';
        console.log('Updated profile avatar:', profileAvatar.src);
      }
      
      // Calculate member since
      const createdDate = new Date(user.createdAt || session.loginTime);
      const memberSince = document.getElementById('memberSince');
      if (memberSince) {
        memberSince.textContent = createdDate.getFullYear().toString();
        console.log('Updated member since:', memberSince.textContent);
      }
      
      // Load dynamic data if user is authenticated
      if (user.id) {
        try {
          console.log('Loading dynamic profile data for user:', user.id);
          await loadFavoriteGames(user.id);
          await loadRecentActivity(user.id);
        } catch (error) {
          console.error('Error loading dynamic profile data:', error);
        }
      }
    }

    // React Profile Edit Modal integration handled via custom events
    
    // Edit profile button handler
    const editProfileBtn = document.getElementById('editProfileBtn');
    editProfileBtn?.addEventListener('click', () => {
      const session = checkAuth();
      if (!session) return;
      
      // Trigger React modal open
      const event = new CustomEvent('openProfileEditModal');
      window.dispatchEvent(event);
    });

    // Listen for profile updates from React component
    window.addEventListener('profileUpdated', () => {
      loadProfile();
    });

    // Avatar change - open profile edit modal
    document.getElementById('changeAvatarBtn')?.addEventListener('click', () => {
      const session = checkAuth();
      if (!session) return;
      
      // Trigger React modal open
      const event = new CustomEvent('openProfileEditModal');
      window.dispatchEvent(event);
    });

    // Notification function is now handled by the global NotificationProvider

    // Initialize profile on page load
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', loadProfile);
    } else {
      loadProfile();
    }
    
    // Tambi√©n cargar en transiciones de Astro
    document.addEventListener('astro:page-load', loadProfile);
  </script>
</Layout>