---
import Layout from '../layouts/Layout.astro';
import ProfileEditModal from '../components/react/ProfileEditModal.tsx';
import PostCard from '../components/PostCard.astro';
import { getFavoriteGamesByPosts } from '../utils/favorites';
import { getPostsByUserId } from '../utils/posts';
import { supabase } from '../utils/supabaseClient';

// Asegurar renderizado bajo demanda y evitar HTML estático con datos sensibles
export const prerender = false;

// Obtener el usuario autenticado en servidor; si no hay sesión, redirigir a login
const { data: { user: authUser } } = await supabase.auth.getUser();
if (!authUser) {
  return Astro.redirect('/login');
}
const userId = authUser.id;

// Get dynamic data
let favoriteGames: any[] = [];
let recentPosts: any[] = [];

// Utilidades para construir la URL de la publicación original
const slugify = (s: string) => s.toLowerCase().trim().replace(/\s+/g, '-');
const getPostOriginalUrl = (post: any) => {
  const gameName = post.games?.name || 'juego';
  const serverName = post.game_servers?.name || null;
  const base = serverName
    ? `/${slugify(gameName)}/${slugify(serverName)}`
    : `/${slugify(gameName)}`;
  return `${base}#post-${post.id}`;
};

try {
  const [favGamesResult, postsResult] = await Promise.all([
    getFavoriteGamesByPosts(userId, 3),
    getPostsByUserId(userId, userId, 10)
  ]);
  
  favoriteGames = favGamesResult.data || [];
  recentPosts = postsResult.data || [];
  
} catch (error) {
  // Silent error handling
}
---

<Layout title="Perfil de Usuario">
  <div class="min-h-screen bg-gradient-to-br from-calico-gray-900 via-calico-orange-900 to-calico-gray-900 pt-16 pb-8">
    <!-- Animated background elements -->
    <div class="absolute inset-0 overflow-hidden z-0">
      <div class="absolute -top-40 -right-40 w-80 h-80 bg-calico-orange-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse z-0"></div>
<div class="absolute -bottom-40 -left-40 w-80 h-80 bg-calico-gray-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse animation-delay-2000 z-0"></div>
      <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-indigo-500 rounded-full mix-blend-multiply filter blur-xl opacity-10 animate-pulse animation-delay-4000 z-0"></div>
    </div>

    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <!-- Header del perfil -->
        <div class="glass-calico rounded-xl p-6 mb-8">
        <div class="bg-gradient-to-r from-calico-orange/20 to-calico-brown/20 dark:from-calico-gray-900/30 dark:to-calico-gray-800/30 p-8 border-b border-calico-stripe-light/20">
          <div class="flex flex-col md:flex-row items-center md:items-start space-y-4 md:space-y-0 md:space-x-6">
            <!-- Avatar -->
            <div class="relative">
              <img id="profileAvatar" src="/default-avatar.png" alt="Avatar" class="w-32 h-32 rounded-full border-4 border-purple-500 shadow-lg">
              <button id="changeAvatarBtn" class="absolute bottom-2 right-2 bg-calico-orange-600 hover:bg-calico-orange-700 text-calico-white p-2 rounded-full transition-colors shadow-lg">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
              </button>
            </div>

            <!-- User Info -->
            <div class="flex-1 text-center md:text-left">
            <h1 id="profileName" class="text-3xl font-bold text-calico-white mb-2">{authUser?.user_metadata?.full_name || authUser?.email?.split('@')[0] || 'Usuario'}</h1>
            <p id="profileEmail" class="text-calico-gray-300 mb-4">{authUser?.email || ''}</p>
              <div class="flex flex-wrap justify-center md:justify-start gap-2">
                <span class="bg-calico-orange/20 text-calico-orange px-3 py-1 rounded-full text-sm border border-calico-orange/30">Gamer</span>
                <span class="bg-calico-brown/20 text-calico-brown px-3 py-1 rounded-full text-sm border border-calico-brown/30">Miembro desde <span id="memberSince">2024</span></span>
              </div>
            </div>

            <!-- Edit Button -->
            <button id="editProfileBtn" class="bg-gradient-to-r from-calico-orange to-calico-brown hover:from-calico-orange/80 hover:to-calico-brown/80 text-calico-white px-6 py-3 rounded-xl transition-all duration-300 hover:shadow-xl shadow-lg">
              <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
              </svg>
              Editar Perfil
            </button>
          </div>
        </div>
      </div>

      <!-- Profile Content -->
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <!-- Main Content -->
        <div class="lg:col-span-2 space-y-8">
          <!-- Gaming Stats removed -->

          <!-- Recent Activity -->
          <div class="glass-calico backdrop-blur-xl rounded-2xl border border-calico-stripe-light/20 p-6">
            <h2 class="text-2xl font-bold text-calico-white mb-6 flex items-center">
              <svg class="w-6 h-6 mr-3 text-calico-orange" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
              </svg>
              Actividad Reciente
            </h2>
            
            <div id="recentActivityContainer" class="space-y-6">
              {recentPosts.length > 0 ? (
                recentPosts.map((post) => (
                  <div class="relative">
                    <PostCard post={post} />
                    <a href={getPostOriginalUrl(post)} class="absolute top-3 right-3 bg-calico-orange/90 text-calico-white px-3 py-1 rounded-lg text-sm hover:bg-calico-orange transition">
                      Ir a la publicación original
                    </a>
                  </div>
                ))
              ) : (
                <div class="flex items-center space-x-4 p-4 bg-calico-orange/5 dark:bg-calico-gray-900/25 rounded-xl border border-calico-orange/20 dark:border-calico-stripe-medium/30">
                  <div class="w-10 h-10 bg-calico-orange/20 dark:bg-calico-gray-800/40 rounded-lg flex items-center justify-center">
                    <svg class="w-5 h-5 text-calico-orange" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
                    </svg>
                  </div>
                  <div class="flex-1">
                    <p class="text-calico-gray-900 dark:text-calico-white font-medium">No hay actividad reciente</p>
                    <p class="text-calico-gray-600 dark:text-calico-gray-300 text-sm">Comienza a publicar en tus juegos favoritos</p>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>

        <!-- Sidebar -->
        <div class="space-y-8">
          <!-- Quick Actions -->
          <div class="glass-calico backdrop-blur-xl rounded-2xl border border-calico-stripe-light/20 p-6">
            <h3 class="text-xl font-bold text-calico-white mb-4">Acciones Rápidas</h3>
            <div class="space-y-3">
              <button class="w-full bg-gradient-to-r from-calico-orange/20 to-calico-brown/20 dark:from-calico-gray-900/30 dark:to-calico-gray-800/30 hover:from-calico-orange/30 hover:to-calico-brown/30 dark:hover:from-calico-gray-800/40 dark:hover:to-calico-gray-700/40 text-calico-orange dark:text-calico-white border border-calico-orange/30 dark:border-calico-stripe-medium/30 px-4 py-3 rounded-xl transition-all duration-300 text-left flex items-center">
                <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
                </svg>
                Conectar a Minecraft
              </button>
              
              <button class="w-full bg-gradient-to-r from-calico-gray/20 to-calico-orange/20 dark:from-calico-gray-900/30 dark:to-calico-gray-800/30 hover:from-calico-gray/30 hover:to-calico-orange/30 dark:hover:from-calico-gray-800/40 dark:hover:to-calico-gray-700/40 text-calico-gray-200 dark:text-calico-white border border-calico-gray/30 dark:border-calico-stripe-medium/30 px-4 py-3 rounded-xl transition-all duration-300 text-left flex items-center">
                <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                </svg>
                Buscar Partida
              </button>
              
              <button class="w-full bg-gradient-to-r from-calico-brown/20 to-calico-orange/20 dark:from-calico-gray-900/30 dark:to-calico-gray-800/30 hover:from-calico-brown/30 hover:to-calico-orange/30 dark:hover:from-calico-gray-800/40 dark:hover:to-calico-gray-700/40 text-calico-brown dark:text-calico-white border border-calico-brown/30 dark:border-calico-stripe-medium/30 px-4 py-3 rounded-xl transition-all duration-300 text-left flex items-center">
                <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
                Configuraciones
              </button>
            </div>
          </div>

          <!-- Favorite Games -->
          <div class="glass-calico backdrop-blur-xl rounded-2xl border border-calico-stripe-light/20 p-6">
            <h3 class="text-xl font-bold text-calico-white mb-4">Juegos Favoritos</h3>
            <div id="favoriteGamesContainer" class="space-y-3">
              {favoriteGames.length > 0 ? (
                favoriteGames.map((game) => (
                  <div class="flex items-center space-x-3 p-3 bg-calico-orange/5 dark:bg-calico-gray-900/25 rounded-xl border border-calico-orange/20 dark:border-calico-stripe-medium/30">
                    <img src={game.cover_image_url || '/default-game-icon.png'} alt={game.name} class="w-10 h-10 rounded-lg object-cover">
                    <div>
                      <p class="text-calico-gray-900 dark:text-calico-white font-medium">{game.name}</p>
                      <p class="text-calico-gray-600 dark:text-calico-gray-300 text-sm">{game.post_count} post{game.post_count !== 1 ? 's' : ''}</p>
                    </div>
                  </div>
                ))
              ) : (
                <div class="flex items-center space-x-3 p-3 bg-calico-orange/5 dark:bg-calico-gray-900/25 rounded-xl border border-calico-orange/20 dark:border-calico-stripe-medium/30">
                  <div class="w-10 h-10 bg-calico-orange/20 dark:bg-calico-gray-800/40 rounded-lg flex items-center justify-center">
                    <svg class="w-5 h-5 text-calico-orange" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                    </svg>
                  </div>
                  <div>
                    <p class="text-calico-gray-900 dark:text-calico-white font-medium">No hay juegos favoritos</p>
                    <p class="text-calico-gray-600 dark:text-calico-gray-300 text-sm">Haz posts en tus juegos favoritos</p>
                  </div>
                </div>
              )}
            </div>
            
          </div>
        </div>
      </div>
    </div>

    <!-- React Profile Edit Modal -->
    <ProfileEditModal client:load isOpen={false} onClose={() => {}} />
  </main>

  <script>
    // Protección adicional en cliente: si no hay sesión, redirigir a login
    const earlySessionCheck = (function() {
      try {
        const raw = localStorage.getItem('userSession') || sessionStorage.getItem('userSession');
        if (!raw) {
          // Evitar que usuarios sin sesión visualicen contenido del perfil
          window.location.replace('/login');
        }
      } catch (_) {
        window.location.replace('/login');
      }
    })();

    // Check if user is logged in
    function checkAuth() {
      const userSession = localStorage.getItem('userSession') || sessionStorage.getItem('userSession');
      if (!userSession) {
        return null;
      }
      
      try {
        const session = JSON.parse(userSession);
        return session;
      } catch (error) {
        localStorage.removeItem('userSession');
        sessionStorage.removeItem('userSession');
        return null;
      }
    }

    // Load favorite games dynamically
    async function loadFavoriteGames(userId: string) {
      try {
        const response = await fetch(`/api/users/${userId}/favorite-games`);
        if (!response.ok) {
          throw new Error('Failed to fetch favorite games');
        }
        const result = await response.json();
        const favoriteGames = result.data || [];
        
        const container = document.getElementById('favoriteGamesContainer');
        if (!container) return;
        
        if (favoriteGames.length > 0) {
          container.innerHTML = favoriteGames.map((game: any) => `
            <div class="flex items-center space-x-3 p-3 bg-calico-orange/5 rounded-xl border border-calico-orange/20">
              <img src="${game.cover_image_url || '/default-game-icon.png'}" alt="${game.name}" class="w-10 h-10 rounded-lg object-cover">
              <div>
                <p class="text-calico-gray-900 font-medium">${game.name}</p>
                <p class="text-calico-gray-600 text-sm">${game.post_count} post${game.post_count !== 1 ? 's' : ''}</p>
              </div>
            </div>
          `).join('');
        } else {
          container.innerHTML = `
            <div class="flex items-center space-x-3 p-3 bg-calico-orange/5 rounded-xl border border-calico-orange/20">
              <div class="w-10 h-10 bg-calico-orange/20 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-calico-orange" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
              </div>
              <div>
                <p class="text-calico-gray-900 font-medium">No hay juegos favoritos</p>
                <p class="text-calico-gray-600 text-sm">Haz posts en tus juegos favoritos</p>
              </div>
            </div>
          `;
        }
        
      } catch (error) {
        // Silent error handling
      }
    }
    
    // Load recent activity dynamically
    async function loadRecentActivity(userId: string) {
      try {
        const response = await fetch(`/api/users/${userId}/recent-activity`);
        if (!response.ok) {
          throw new Error('Failed to fetch recent activity');
        }
        const result = await response.json();
        const recentActivity = result.data || [];
        
        const container = document.getElementById('recentActivityContainer');
        if (!container) return;
        
        if (recentActivity.length > 0) {
          container.innerHTML = recentActivity.map((activity: any) => `
            <div class="flex items-center space-x-4 p-4 bg-calico-orange/5 rounded-xl border border-calico-orange/20">
              <div class="w-10 h-10 bg-calico-orange/20 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-calico-orange" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
                </svg>
              </div>
              <div class="flex-1">
                <p class="text-calico-gray-900 font-medium">${activity.text}</p>
                <p class="text-calico-gray-600 text-sm">${activity.time}</p>
              </div>
            </div>
          `).join('');
        } else {
          container.innerHTML = `
            <div class="flex items-center space-x-4 p-4 bg-calico-orange/5 rounded-xl border border-calico-orange/20">
              <div class="w-10 h-10 bg-calico-orange/20 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-calico-orange" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
                </svg>
              </div>
              <div class="flex-1">
                <p class="text-calico-gray-900 font-medium">No hay actividad reciente</p>
                <p class="text-calico-gray-600 text-sm">Comienza a publicar en tus juegos favoritos</p>
              </div>
            </div>
          `;
        }
        
      } catch (error) {
        // Silent error handling
      }
    }

    // Load user profile data
    async function loadProfile() {
      const session = checkAuth();
      if (!session) {
        // No hay sesión; no modificar contenido SSR
        return;
      }
      
      const user = session.user;
      
      // Update profile elements
      const profileName = document.getElementById('profileName');
      const profileEmail = document.getElementById('profileEmail');
      const profileAvatar = document.getElementById('profileAvatar') as HTMLImageElement;
      
      if (profileName) {
        profileName.textContent = user.full_name || user.username || 'Usuario';
      }
      if (profileEmail) {
        profileEmail.textContent = user.email;
      }
      if (profileAvatar) {
        profileAvatar.src = user.avatar || '/default-avatar.png';
      }
      
      // Calculate member since
      const createdDate = new Date(user.createdAt || session.loginTime);
      const memberSince = document.getElementById('memberSince');
      if (memberSince) {
        memberSince.textContent = createdDate.getFullYear().toString();
      }
      
      // Load dynamic data if user is authenticated
      if (user.id) {
        try {
          await loadFavoriteGames(user.id);
          // Nota: omitimos cargar actividad reciente por cliente para mantener SSR
        } catch (error) {
          // Silent error handling
        }
      }
    }

    // React Profile Edit Modal integration handled via custom events
    
    // Edit profile button handler
    const editProfileBtn = document.getElementById('editProfileBtn');
    editProfileBtn?.addEventListener('click', () => {
      const session = checkAuth();
      if (!session) return;
      
      // Trigger React modal open
      const event = new CustomEvent('openProfileEditModal');
      window.dispatchEvent(event);
    });

    // Listen for profile updates from React component
    window.addEventListener('profileUpdated', () => {
      loadProfile();
    });

    // Avatar change - open profile edit modal
    document.getElementById('changeAvatarBtn')?.addEventListener('click', () => {
      const session = checkAuth();
      if (!session) return;
      
      // Trigger React modal open
      const event = new CustomEvent('openProfileEditModal');
      window.dispatchEvent(event);
    });

    // Notification function is now handled by the global NotificationProvider

    // Initialize profile on page load
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', loadProfile);
    } else {
      loadProfile();
    }
    
    // También cargar en transiciones de Astro
    document.addEventListener('astro:page-load', loadProfile);
  </script>
</Layout>